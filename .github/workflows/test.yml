name: Deploy to Amazon ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  REPO_NAME: hello
  AWS_USE_FIPS_ENDPOINT: "true"
  ECR_FIPS_ENDPOINT: "https://ecr-fips.us-east-1.amazonaws.com"
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}  # Make sure to add this secret

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          # Get ECR login token using FIPS endpoint
          token=$(aws ecr get-login-password --endpoint-url ${{ env.ECR_FIPS_ENDPOINT }})
          
          # Set the registry URL using environment variable
          REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr-fips.${AWS_REGION}.amazonaws.com"
          echo "registry=${REGISTRY}" >> $GITHUB_OUTPUT
          
          # Login to ECR
          echo $token | docker login --username AWS --password-stdin $REGISTRY

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Configure AWS CLI to use FIPS endpoint
          aws configure set default.ecr.endpoint-url ${{ env.ECR_FIPS_ENDPOINT }}
          
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG .
          
          # Push using FIPS endpoint
          docker push $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG
          
          echo "image=$ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

    
